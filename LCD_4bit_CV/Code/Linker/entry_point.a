;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// RS -> PORTB.0    RS-> 0 Command, RS-> 1 Data
;// R/W -> PORTB.1   R/w-> 0 Write, R/W-> 1 Read
;// E -> PORTB.2     E -> 1 then E-> 0
;
;
;void Init_MCU(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000B     // Input/Output Ports initialization
; 0000 000C     // Port A initialization
; 0000 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 000E     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 000F     PORTA=0x00;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0010     DDRA=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0011 
; 0000 0012     // Port B initialization
; 0000 0013     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0014     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0015     PORTB=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016     DDRB=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0017 
; 0000 0018     // Port C initialization
; 0000 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 001A     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 001B     PORTC=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C     DDRC=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001D 
; 0000 001E     // Port D initialization
; 0000 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0020     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0021     PORTD=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022     DDRD=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0023 
; 0000 0024     // Timer/Counter 0 initialization
; 0000 0025     // Clock source: System Clock
; 0000 0026     // Clock value: Timer 0 Stopped
; 0000 0027     // Mode: Normal top=0xFF
; 0000 0028     // OC0 output: Disconnected
; 0000 0029     TCCR0=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002A     TCNT0=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 002B     OCR0=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002C 
; 0000 002D     // Timer/Counter 1 initialization
; 0000 002E     // Clock source: System Clock
; 0000 002F     // Clock value: Timer1 Stopped
; 0000 0030     // Mode: Normal top=0xFFFF
; 0000 0031     // OC1A output: Discon.
; 0000 0032     // OC1B output: Discon.
; 0000 0033     // Noise Canceler: Off
; 0000 0034     // Input Capture on Falling Edge
; 0000 0035     // Timer1 Overflow Interrupt: Off
; 0000 0036     // Input Capture Interrupt: Off
; 0000 0037     // Compare A Match Interrupt: Off
; 0000 0038     // Compare B Match Interrupt: Off
; 0000 0039     TCCR1A=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 003A     TCCR1B=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 003B     TCNT1H=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 003C     TCNT1L=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 003D     ICR1H=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 003E     ICR1L=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003F     OCR1AH=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0040     OCR1AL=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0041     OCR1BH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0042     OCR1BL=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0043 
; 0000 0044     // Timer/Counter 2 initialization
; 0000 0045     // Clock source: System Clock
; 0000 0046     // Clock value: Timer2 Stopped
; 0000 0047     // Mode: Normal top=0xFF
; 0000 0048     // OC2 output: Disconnected
; 0000 0049     ASSR=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 004A     TCCR2=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004B     TCNT2=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 004C     OCR2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 004D 
; 0000 004E     // External Interrupt(s) initialization
; 0000 004F     // INT0: Off
; 0000 0050     // INT1: Off
; 0000 0051     // INT2: Off
; 0000 0052     MCUCR=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0053     MCUCSR=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0054 
; 0000 0055     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0056     TIMSK=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0057 
; 0000 0058     // USART initialization
; 0000 0059     // USART disabled
; 0000 005A     UCSRB=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 005B 
; 0000 005C     // Analog Comparator initialization
; 0000 005D     // Analog Comparator: Off
; 0000 005E     // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 005F     ACSR=0x80;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0060     SFIOR=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0061 
; 0000 0062     // ADC initialization
; 0000 0063     // ADC disabled
; 0000 0064     ADCSRA=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0065 
; 0000 0066     // SPI initialization
; 0000 0067     // SPI disabled
; 0000 0068     SPCR=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0069 
; 0000 006A     // TWI initialization
; 0000 006B     // TWI disabled
; 0000 006C     TWCR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 006D }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;
;// Wait LCD
;void wait_LCD(void)
; 0000 0071 {
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0072    // Make Pin7 As Input
; 0000 0073    PORTB.7 = 1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0074    DDRB.7 = 0;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0075 
; 0000 0076    // Make R/w as Read
; 0000 0077    PORTB.1 = 1;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0078    // make RS as CMD
; 0000 0079    PORTB.0 = 0;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 007A 
; 0000 007B    // Wait untill PINA.7 be 0
; 0000 007C    //do
; 0000 007D    //{
; 0000 007E         PORTB.2 = 1;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 007F         delay_ms(1);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0080         PORTB.2 = 0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0081   // }while(PINB.7 == 1);
; 0000 0082 
; 0000 0083    // Make Pin7 As OutPut
; 0000 0084    DDRB.7 = 1;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0085 }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;
;// Send CMD to LCD
;void Send_CMD(unsigned char cmd)
; 0000 0089 {
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 008A   //wait_LCD();
; 0000 008B 
; 0000 008C   // Make RS as Command
; 0000 008D   PORTB.0 = 0;
;	cmd -> Y+0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 008E   // Make It Write
; 0000 008F   PORTB.1 = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0090 
; 0000 0091   // Put CMD on PORT
; 0000 0092   PORTB &= 0x0F;  // Make Data Nibble as 0000
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0093   PORTB |= (cmd&0xF0);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0094 
; 0000 0095   // Update LCD
; 0000 0096   // Make transition from High to Low
; 0000 0097   PORTB.2 = 1;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0098   delay_ms(1);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0099   PORTB.2 = 0;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 009A 
; 0000 009B   //wait_LCD();
; 0000 009C 
; 0000 009D   // Put CMD on PORT
; 0000 009E   PORTB &= 0x0F;  // Make Data Nibble as 0000
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 009F   PORTB |= ((cmd<<4)&0xF0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00A0 
; 0000 00A1   // Update LCD
; 0000 00A2   // Make transition from High to Low
; 0000 00A3   PORTB.2 = 1;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00A4   delay_ms(1);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00A5   PORTB.2 = 0;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00A6 }
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;
;// Send Data to LCD
;void Send_Data(unsigned char data)
; 0000 00AA {
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00AB   // Wait LCD to be Free
; 0000 00AC   //wait_LCD();
; 0000 00AD 
; 0000 00AE 
; 0000 00AF   // Make RS as Data
; 0000 00B0   PORTB.0 = 1;
;	data -> Y+0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00B1   // Make It Write
; 0000 00B2   PORTB.1 = 0;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00B3 
; 0000 00B4   // Put CMD on PORT
; 0000 00B5   PORTB &= 0x0F;  // Make Data Nibble as 0000
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00B6   PORTB |= (data&0xF0);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00B7 
; 0000 00B8   // Update LCD
; 0000 00B9   // Make transition from High to Low
; 0000 00BA   PORTB.2 = 1;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00BB   delay_ms(1);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00BC   PORTB.2 = 0;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00BD 
; 0000 00BE   //wait_LCD();
; 0000 00BF 
; 0000 00C0   // Put CMD on PORT
; 0000 00C1   PORTB &= 0x0F;  // Make Data Nibble as 0000
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00C2   PORTB |= ((data<<4)&0xF0);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00C3 
; 0000 00C4   // Update LCD
; 0000 00C5   // Make transition from High to Low
; 0000 00C6   PORTB.2 = 1;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00C7   delay_ms(1);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00C8   PORTB.2 = 0;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00C9 }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;
;
;// Init LCD
;void Init_LCD(void)
; 0000 00CE {
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00CF     delay_ms(20);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00D0     // Init HW Ports
; 0000 00D1     // Data Port
; 0000 00D2     // Port A initialization
; 0000 00D3     // Make it all OutPut -> 0
; 0000 00D4     PORTB=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00D5     DDRB=0xFF;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00D6 
; 0000 00D7     ///////// Special Sequence ///////
; 0000 00D8     // Set LCD as 4 Bits
; 0000 00D9     // Set RS -> 0 Command
; 0000 00DA     PORTB &= 0xFE;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00DB     // Set R/W ->0 Write
; 0000 00DC     PORTB &= 0xFD;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00DD 
; 0000 00DE     // Write Command to be 4 Bits Mode
; 0000 00DF     PORTB &= 0x0F;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00E0     PORTB |= 0x30;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00E1 
; 0000 00E2     // Update LCD
; 0000 00E3     // Update LCD
; 0000 00E4     // Make transition from High to Low
; 0000 00E5     PORTB.2 = 1;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00E6     delay_ms(1);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00E7     PORTB.2 = 0;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00E8 
; 0000 00E9     delay_ms(5);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 00EA 
; 0000 00EB     // Update LCD
; 0000 00EC     // Update LCD
; 0000 00ED     // Make transition from High to Low
; 0000 00EE     PORTB.2 = 1;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00EF     delay_ms(1);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 00F0     PORTB.2 = 0;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 00F1 
; 0000 00F2     delay_ms(100);
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00F3 
; 0000 00F4     // Update LCD
; 0000 00F5     // Update LCD
; 0000 00F6     // Make transition from High to Low
; 0000 00F7     PORTB.2 = 1;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00F8     delay_ms(1);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00F9     PORTB.2 = 0;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00FA 
; 0000 00FB     delay_ms(5);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00FC     /////////////////////////////////
; 0000 00FD 
; 0000 00FE     // Set LCD as 4 Bits
; 0000 00FF     // Set RS -> 0 Command
; 0000 0100     PORTB &= 0xFE;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0101     // Set R/W ->0 Write
; 0000 0102     PORTB &= 0xFD;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0103 
; 0000 0104     // Write Command to be 4 Bits Mode
; 0000 0105     PORTB &= 0x0F;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0106     PORTB |= 0x20;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0107 
; 0000 0108     // Update LCD
; 0000 0109     // Update LCD
; 0000 010A     // Make transition from High to Low
; 0000 010B     PORTB.2 = 1;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 010C     delay_ms(1);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 010D     PORTB.2 = 0;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 010E 
; 0000 010F     // 2 Lines
; 0000 0110     Send_CMD(0x28);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0111     // LCD On
; 0000 0112     Send_CMD(0x0C);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0113 }
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;
;void LCD_GotoXY(unsigned char X, unsigned char Y)
; 0000 0116 {
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0117     if(Y==0)
;	X -> Y+1
;	Y -> Y+0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0118     {
; 0000 0119        Send_CMD(0x80+X);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 011A     }
; 0000 011B     else
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 011C     {
; 0000 011D         Send_CMD(0x80 + X + 0x40);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 011E     }
;PCODE: $00000116 VOL: 0
; 0000 011F }
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;
;void main(void)
; 0000 0122 {
;PCODE: $0000011A VOL: 0
; 0000 0123     // Init MCU
; 0000 0124     Init_MCU();
;PCODE: $0000011B VOL: 0
; 0000 0125 
; 0000 0126     // Init LCD
; 0000 0127     Init_LCD();
;PCODE: $0000011C VOL: 0
; 0000 0128 
; 0000 0129     LCD_GotoXY(0,0);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 012A     // Disp Char M
; 0000 012B     Send_Data('M');
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 012C     LCD_GotoXY(10,0);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 012D     // Disp Char M
; 0000 012E     Send_Data('M');
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 012F     LCD_GotoXY(0,1);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 0130     // Disp Char M
; 0000 0131     Send_Data('M');
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0132     LCD_GotoXY(10,1);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0133     // Disp Char M
; 0000 0134     Send_Data('M');
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0135 
; 0000 0136     while(1)
;PCODE: $0000013D VOL: 0
; 0000 0137     {
; 0000 0138         //Send_Data('M');
; 0000 0139     }
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 013A  }
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
