#include <mega32.h>
#include <delay.h>
 
const unsigned char power[4]={1,2,4,8};
const unsigned char keys[4][4]=
{
 {0,4,8,12},
 {1,5,9,13},
 {2,6,10,14},
 {3,7,11,15} 
};
 // init mcu register
 void MCU_INIT (void)
 {
 // Input/Output Ports initialization
 // Port A initialization
 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
 PORTA=0x00;
 DDRA=0x00;
 
 // Port B initialization
 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
 PORTB=0x0f;
 DDRB=0xf0;
 
// Port C initialization
 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
 PORTC=0x00;
 DDRC=0xFF;
 
// Port D initialization
 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
 PORTD=0x00;
 DDRD=0x00;
 
// Timer/Counter 0 initialization
 // Clock source: System Clock
 // Clock value: Timer 0 Stopped
 // Mode: Normal top=0xFF
 // OC0 output: Disconnected
 TCCR0=0x00;
 TCNT0=0x00;
 OCR0=0x00;
 
// Timer/Counter 1 initialization
 // Clock source: System Clock
 // Clock value: Timer1 Stopped
 // Mode: Normal top=0xFFFF
 // OC1A output: Discon.
 // OC1B output: Discon.
 // Noise Canceler: Off
 // Input Capture on Falling Edge
 // Timer1 Overflow Interrupt: Off
 // Input Capture Interrupt: Off
 // Compare A Match Interrupt: Off
 // Compare B Match Interrupt: Off
 TCCR1A=0x00;
 TCCR1B=0x00;
 TCNT1H=0x00;
 TCNT1L=0x00;
 ICR1H=0x00;
 ICR1L=0x00;
 OCR1AH=0x00;
 OCR1AL=0x00;
 OCR1BH=0x00;
 OCR1BL=0x00;
 
// Timer/Counter 2 initialization
 // Clock source: System Clock
 // Clock value: Timer2 Stopped
 // Mode: Normal top=0xFF
 // OC2 output: Disconnected
 ASSR=0x00;
 TCCR2=0x00;
 TCNT2=0x00;
 OCR2=0x00;
 
// External Interrupt(s) initialization
 // INT0: Off
 // INT1: Off
 // INT2: Off
 MCUCR=0x00;
 MCUCSR=0x00;
 
// Timer(s)/Counter(s) Interrupt(s) initialization
 TIMSK=0x00;
 
// USART initialization
 // USART disabled
 UCSRB=0x00;
 
// Analog Comparator initialization
 // Analog Comparator: Off
 // Analog Comparator Input Capture by Timer/Counter 1: Off
 ACSR=0x80;
 SFIOR=0x00;
 
// ADC initialization
 // ADC disabled
 ADCSRA=0x00;
 
// SPI initialization
 // SPI disabled
 SPCR=0x00;
 
// TWI initialization
 // TWI disabled
 TWCR=0x00;
 }
 
unsigned char getpower(unsigned char val)
{
     unsigned char count=0;
     for(count=0;count<4;count++)
     {
         if(power[count]==val)
         break;
     }
     return count;
}
 
unsigned char getkey(void)
{
     unsigned char key=20;
     unsigned char count=0;
     unsigned char rowval=0;
     
     PORTB=(PORTB|0xF0);
     
    for(count=1;count<4;count++)
    {
         PORTB = PORTB&(~(0x10<<count));
         delay_ms(20);
         rowval=PINB&0x0F;
         if(rowval!=0x0F)
         {
            break;
         }
         PORTB=(PORTB|0xF0);
    }
    
    if(rowval==0x0F)
    {
        return key;
    }
    else
    {
         rowval=rowval^0x0F;
         rowval=getpower (rowval);
         return keys[rowval][count];
    }
     
}
 
void main(void)
{
    //declare variables
 
    //edit init area
    MCU_INIT();
 
    while(1)
    {
         unsigned char x=0;
         x=getkey();
         if(x!=20)
         PORTC = x;
    } 
}