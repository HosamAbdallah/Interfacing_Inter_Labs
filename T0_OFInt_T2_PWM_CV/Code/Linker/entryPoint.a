;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;unsigned int T0_counter = 0;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0007 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008     // Place your code here
; 0000 0009     T0_counter++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000A     if(T0_counter == 500)
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000B     {
; 0000 000C         PORTC = ~PORTC;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000D         T0_counter = 0;
;PCODE: $00000018 VOL: 0
; 0000 000E     }
; 0000 000F }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;
;// Init MCU Registers
;void MCU_Init(void)
; 0000 0014 {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0015     // Input/Output Ports initialization
; 0000 0016     // Port A initialization
; 0000 0017     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0018     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0019     PORTA=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001A     DDRA=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001B 
; 0000 001C     // Port B initialization
; 0000 001D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 001E     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 001F     PORTB=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0020     DDRB=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0021 
; 0000 0022     // Port C initialization
; 0000 0023     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0024     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0025     PORTC=0xFF;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0026     DDRC=0xFF;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0027 
; 0000 0028     // Port D initialization
; 0000 0029     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002A     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002B     PORTD=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002C     DDRD=0x80;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002D 
; 0000 002E     // Timer/Counter 0 initialization
; 0000 002F     // Clock source: System Clock
; 0000 0030     // Clock value: 125.000 kHz
; 0000 0031     // Mode: Normal top=0xFF
; 0000 0032     // OC0 output: Disconnected
; 0000 0033     TCCR0=0x03;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0034     TCNT0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0035     OCR0=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0036 
; 0000 0037     // Timer/Counter 1 initialization
; 0000 0038     // Clock source: System Clock
; 0000 0039     // Clock value: Timer1 Stopped
; 0000 003A     // Mode: Normal top=0xFFFF
; 0000 003B     // OC1A output: Discon.
; 0000 003C     // OC1B output: Discon.
; 0000 003D     // Noise Canceler: Off
; 0000 003E     // Input Capture on Falling Edge
; 0000 003F     // Timer1 Overflow Interrupt: Off
; 0000 0040     // Input Capture Interrupt: Off
; 0000 0041     // Compare A Match Interrupt: Off
; 0000 0042     // Compare B Match Interrupt: Off
; 0000 0043     TCCR1A=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0044     TCCR1B=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0045     TCNT1H=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0046     TCNT1L=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0047     ICR1H=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0048     ICR1L=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0049     OCR1AH=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 004A     OCR1AL=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 004B     OCR1BH=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004C     OCR1BL=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004D 
; 0000 004E     // Timer/Counter 2 initialization
; 0000 004F // Clock source: System Clock
; 0000 0050 // Clock value: 0.977 kHz
; 0000 0051 // Mode: Phase correct PWM top=0xFF
; 0000 0052 // OC2 output: Non-Inverted PWM
; 0000 0053 ASSR=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0054 TCCR2=0x67;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0055 TCNT2=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0056 OCR2=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0057 
; 0000 0058     // External Interrupt(s) initialization
; 0000 0059     // INT0: Off
; 0000 005A     // INT1: Off
; 0000 005B     // INT2: Off
; 0000 005C     MCUCR=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 005D     MCUCSR=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 005E 
; 0000 005F     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0060     TIMSK=0x01;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0061 
; 0000 0062     // USART initialization
; 0000 0063     // USART disabled
; 0000 0064     UCSRB=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0065 
; 0000 0066     // Analog Comparator initialization
; 0000 0067     // Analog Comparator: Off
; 0000 0068     // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0069     ACSR=0x80;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 006A     SFIOR=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 006B 
; 0000 006C     // ADC initialization
; 0000 006D     // ADC disabled
; 0000 006E     ADCSRA=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 006F 
; 0000 0070     // SPI initialization
; 0000 0071     // SPI disabled
; 0000 0072     SPCR=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0073 
; 0000 0074     // TWI initialization
; 0000 0075     // TWI disabled
; 0000 0076     TWCR=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0077 }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;
;
;void main(void)
; 0000 007B {
;PCODE: $00000065 VOL: 0
; 0000 007C     // Declare Variables
; 0000 007D         unsigned int x = 0;
; 0000 007E     // Init Functions
; 0000 007F     MCU_Init();
;	x -> R16,R17
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0080 
; 0000 0081     // Enable Interrupts
; 0000 0082     #asm ("sei")
;PCODE: $00000069 VOL: 0
	sei
;PCODE: $0000006A VOL: 0
; 0000 0083     while(1)
;PCODE: $0000006B VOL: 0
; 0000 0084     {
; 0000 0085         // Infinte Loop
; 0000 0086         for(x=0;x<250;x++)
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0087          OCR2 = x;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0088 for(x=250; x>0; x--)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0089          OCR2 = x;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 008B }
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 008C }
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
